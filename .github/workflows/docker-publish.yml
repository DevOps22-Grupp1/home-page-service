name: Docker Build and Push

on:
  push:
    branches:
      - 10-test-github-action-building-docker-image-and-publish
      - 11-updating-frontend-dockerfile
      - main


permissions:
  issues: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check automation pipeline status
        run: |
          # Skicka en repository_dispatch-händelse
          curl --request POST \
            --url 'https://api.github.com/repos/DevOps22-Grupp1/test/actions/workflows/home-update-sha.yml/dispatches' \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{secrets.TOKEN}}" \
            -d '{"ref":"main"}'

          # Vänta på att svar kommer tillbaka från cURL-förfrågan innan du fortsätter
          response_code=$(curl -s -o /dev/null -w "%{http_code}" https://api.github.com/repos/DevOps22-Grupp1/test/actions/workflows/home-update-sha.yml/dispatches)
          while [ $response_code -ne 200 ]; do
            sleep 1
            response_code=$(curl -s -o /dev/null -w "%{http_code}" https://api.github.com/repos/DevOps22-Grupp1/test/actions/workflows/home-update-sha.yml/dispatches)
          done

          # Skicka en förfrågan till GitHub API för att hämta statusen för det senaste jobbet
          JOB_STATUS=$(curl -s -H "Authorization: Bearer ${{secrets.TOKEN}}" \
            "https://api.github.com/repos/DevOps22-Grupp1/test/actions/runs?event=repository_dispatch&status=completed" \
            |  jq -r '.workflow_runs[0].conclusion')

          echo "Job status: $JOB_STATUS"

          
  
          # if [ "$STATUS" = "failure" ]; then
          #   exit 1
          # fi
      
      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      # - name: Build Docker Image
      #   run: |
      #     docker build -t passwordnotsafe/home-page-service:${{ github.sha }} ./backend

      # - name: Push Docker Image
      #   run: |
      #     docker push passwordnotsafe/home-page-service:${{ github.sha }}

      # # build and push the second image also
      # - name: Build Docker Image
      #   run: |
      #     docker build -t passwordnotsafe/seed-data ./script

      # - name: Push Docker Image for script
      #   run: |
      #     docker push passwordnotsafe/seed-data

      # # build and push the third image also ## we could use a better way
      # - name: Build Docker Image
      #   run: |
      #     docker build -t passwordnotsafe/mongo-backup ./script/backup

      # dont know why at the moment why, I think it was for a backup database test 
      # - name: Push Docker Image for script
      #   run: |
      #     docker push passwordnotsafe/mongo-backup

      # - name: Sleep for 30 seconds
      #   uses: jakejarvis/wait-action@master
      #   with:
      #     time: '15s' 

      # - name: Trigger fetch new sha update to k8 deployment file.
      #   run: |
      #     curl --request POST \
      #       --url 'https://api.github.com/repos/DevOps22-Grupp1/scamazon/actions/workflows/home-update-sha.yml/dispatches' \
      #       -H "Accept: application/vnd.github+json" \
      #       -H 'Authorization: Bearer ${{secrets.TOKEN}}' \
      #       -d '{"ref":"main"}'
